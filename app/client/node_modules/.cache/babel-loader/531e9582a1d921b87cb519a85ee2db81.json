{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andra\\\\source\\\\repos\\\\andrassajo97\\\\WebTech-II.-assigment\\\\app\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { getCurrentUser } from \"../../actions/userActions\";\nimport moment from \"moment\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentDate: new Date(),\n      markedDate: moment(new Date()).format(\"YYYY-MM-DD\")\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    const {\n      loading\n    } = this.props.user;\n    const today = this.state.currentDate;\n    const day = moment(today).format(\"dddd\");\n    const date = moment(today).format(\"MMMM D, YYYY\");\n    let dashboardContent;\n\n    if (user === null || loading) {\n      dashboardContent = /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 26\n        }\n      }, \"Loading...\");\n    } else {\n      dashboardContent = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"display-4 float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"Welcome, \", user.username, \"!\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"display-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, day), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"display-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, date));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing position-relative overflow-auto p-3 p-md-5 text-center bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-white p-5 float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, dashboardContent));\n  }\n\n}\n\nDashboard.propTypes = {\n  getCurrentUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  auth: state.user\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentUser\n})(withRouter(Dashboard));","map":{"version":3,"sources":["C:/Users/andra/source/repos/andrassajo97/WebTech-II.-assigment/app/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","PropTypes","connect","withRouter","getCurrentUser","moment","Dashboard","constructor","state","currentDate","Date","markedDate","format","componentDidMount","props","render","user","auth","loading","today","day","date","dashboardContent","username","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChCO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,IAAIC,IAAJ,EADF;AAEXC,MAAAA,UAAU,EAAEN,MAAM,CAAC,IAAIK,IAAJ,EAAD,CAAN,CAAmBE,MAAnB,CAA0B,YAA1B;AAFD,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWV,cAAX;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKF,KAAL,CAAWG,IAA5B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKJ,KAAL,CAAWE,IAA/B;AAEA,UAAMG,KAAK,GAAG,KAAKX,KAAL,CAAWC,WAAzB;AACA,UAAMW,GAAG,GAAGf,MAAM,CAACc,KAAD,CAAN,CAAcP,MAAd,CAAqB,MAArB,CAAZ;AACA,UAAMS,IAAI,GAAGhB,MAAM,CAACc,KAAD,CAAN,CAAcP,MAAd,CAAqB,cAArB,CAAb;AAEA,QAAIU,gBAAJ;;AAEA,QAAIN,IAAI,KAAK,IAAT,IAAiBE,OAArB,EAA8B;AAC5BI,MAAAA,gBAAgB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAnB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,gBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+CN,IAAI,CAACO,QAApD,MADF,eAEE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BH,GAA1B,CAFF,eAGE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BC,IAA1B,CAHF,CADF;AAOD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,yEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CC,gBAA7C,CADF,CADF;AAKD;;AAxC+B;;AA2ClChB,SAAS,CAACkB,SAAV,GAAsB;AACpBpB,EAAAA,cAAc,EAAEH,SAAS,CAACwB,IAAV,CAAeC,UADX;AAEpBT,EAAAA,IAAI,EAAEhB,SAAS,CAAC0B,MAAV,CAAiBD,UAFH;AAGpBV,EAAAA,IAAI,EAAEf,SAAS,CAAC0B,MAAV,CAAiBD;AAHH,CAAtB;;AAMA,MAAME,eAAe,GAAIpB,KAAD,KAAY;AAClCQ,EAAAA,IAAI,EAAER,KAAK,CAACQ,IADsB;AAElCC,EAAAA,IAAI,EAAET,KAAK,CAACQ;AAFsB,CAAZ,CAAxB;;AAKA,eAAed,OAAO,CAAC0B,eAAD,EAAkB;AAAExB,EAAAA;AAAF,CAAlB,CAAP,CACbD,UAAU,CAACG,SAAD,CADG,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"../../actions/userActions\";\r\nimport moment from \"moment\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentDate: new Date(),\r\n      markedDate: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { loading } = this.props.user;\r\n\r\n    const today = this.state.currentDate;\r\n    const day = moment(today).format(\"dddd\");\r\n    const date = moment(today).format(\"MMMM D, YYYY\");\r\n\r\n    let dashboardContent;\r\n\r\n    if (user === null || loading) {\r\n      dashboardContent = <h4>Loading...</h4>;\r\n    } else {\r\n      dashboardContent = (\r\n        <div>\r\n          <p className=\"display-4 float-right\">Welcome, {user.username}!</p>\r\n          <p className=\"display-4\">{day}</p>\r\n          <p className=\"display-4\">{date}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"landing position-relative overflow-auto p-3 p-md-5 text-center bg-light\">\r\n        <div className=\"text-white p-5 float-right\">{dashboardContent}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  getCurrentUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  auth: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentUser })(\r\n  withRouter(Dashboard)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}